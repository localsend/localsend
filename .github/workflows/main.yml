name: Flutter CI/CD (Merge Queue Compatible)

on:
  pull_request:
    branches: [main, master, develop]
  workflow_dispatch:

jobs:
  analyze_test:
    name: "Flutter: Analyze & Test"
    runs-on: ubuntu-latest
    permissions:
      checks: write
      pull-requests: write
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.19.0"
          channel: "stable"
          cache: true
          cache-key: flutter-${{ runner.os }}-${{ hashFiles('**/pubspec.lock') }}
      - name: Install dependencies
        run: flutter pub get

      - name: Run Flutter Analyze
        run: flutter analyze

      - name: Run Unit Tests with Coverage
        run: flutter test --coverage

      - name: Upload coverage report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage/

      - name: Notify PR on failure
        if: ${{ github.event_name == 'pull_request' && failure() }}
        uses: actions/github-script@v6
        with:
          script: |
            const pr = context.payload.pull_request;
            if (!pr) return;
            await github.rest.issues.createComment({
              issue_number: pr.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `‚ùå **CI/CD Failed**
              - Flutter analysis or tests failed
              - Merge is blocked
              üîç [View workflow run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})`
            });

      - name: Notify PR on success
        if: ${{ github.event_name == 'pull_request' && success() }}
        uses: actions/github-script@v6
        with:
          script: |
            const pr = context.payload.pull_request;
            if (!pr) return;
            await github.rest.issues.createComment({
              issue_number: pr.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `‚úÖ **All checks passed**
              - Flutter analysis: success
              - Tests: successReady for merge! üöÄ`
            });
